<Project>
  <!-- Project information -->
  <PropertyGroup>
    <Product>Discord Moderation Bot</Product>
    <Authors>Alex Noddings</Authors>
    <Company>Sish Industries</Company>
  </PropertyGroup>

  <!-- Default values -->
  <PropertyGroup>
    <StrongNameKeyId>SishIndustriesDiscordModBot</StrongNameKeyId>
    
    <!-- Default target for Net Core-targetting projects -->
    <DefaultNetCoreTargetFramework>netcoreapp3.1</DefaultNetCoreTargetFramework>
    <!-- Default target for Net Standard-targetting projects -->
    <DefaultNetStandardTargetFramework>netstandard2.1</DefaultNetStandardTargetFramework>
    <!-- Default version for ASP-related NuGet packages -->
    <AspNetCoreVersion>3.1.4</AspNetCoreVersion>

    <RepoRoot>$(MSBuildThisFileDirectory)</RepoRoot>
    <RepositoryUrl>https://github.com/alexnoddings/discordmodbot</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <!-- The SPDX name for the source license. See https://spdx.org/licenses/. -->
    <PackageLicenseExpression>MIT</PackageLicenseExpression>

    <IncludeSymbols>true</IncludeSymbols>
  </PropertyGroup>

  <!-- Defines project type conventions. -->
  <PropertyGroup>
    <RepoRelativeProjectDir>$([MSBuild]::MakeRelative($(RepoRoot), $(MSBuildProjectDirectory)))</RepoRelativeProjectDir>

    <IsReferenceAssemblyProject>false</IsReferenceAssemblyProject>

    <IsUnitTestProject>false</IsUnitTestProject>
    <IsUnitTestProject Condition="$(MSBuildProjectName.EndsWith('Tests'))">true</IsUnitTestProject>

    <IsStableBuild>false</IsStableBuild>
    <IsStableBuild Condition=" '$(Configuration)' == 'Release' ">true</IsStableBuild>
  </PropertyGroup>

  <!-- Warnings and errors. -->
  <PropertyGroup>
    <Nullable>enable</Nullable>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <!-- Don't make missing XML docs a fatal build error, but still surface so we have visibility into undocumented APIs. -->
    <WarningsNotAsErrors>$(WarningsNotAsErrors);CS1591</WarningsNotAsErrors>
    <!-- Don't make marking a method as async without performing an await a fatal build error as it makes some methods more consistent and easier to read, but still surface. -->
    <WarningsNotAsErrors>$(WarningsNotAsErrors);CS1998</WarningsNotAsErrors>
  </PropertyGroup>

  <!-- Targets. -->
  <PropertyGroup>
    <TargetOsName Condition=" '$(TargetOsName)' == '' AND $([MSBuild]::IsOSPlatform('Windows'))">win</TargetOsName>
    <TargetOsName Condition=" '$(TargetOsName)' == '' AND $([MSBuild]::IsOSPlatform('OSX'))">osx</TargetOsName>
    <TargetOsName Condition=" '$(TargetOsName)' == '' AND $([MSBuild]::IsOSPlatform('Linux'))">linux</TargetOsName>
    <TargetArchitecture Condition="'$(TargetArchitecture)' == ''">x64</TargetArchitecture>
    <TargetRuntimeIdentifier Condition="'$(TargetRuntimeIdentifier)' == ''">$(TargetOsName)-$(TargetArchitecture)</TargetRuntimeIdentifier>
  </PropertyGroup>

</Project>